version: '3.8'

services:
  # CI runner using act
  ci-runner:
    image: nektos/act:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
      - act-cache:/root/.cache
    working_dir: /workspace
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    command: ["-W", "/workspace/.github/workflows/ci.yml", "-j", "test-unit", "--matrix", "go:1.24"]

  # Etcd service for tests
  etcd:
    image: quay.io/coreos/etcd:v3.5.15
    network_mode: "host"
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://localhost:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCDCTL_API=3
      - ETCD_DATA_DIR=/etcd-data
    volumes:
      - etcd-data:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Azure storage emulator (Azurite)
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service
      - "10002:10002"  # Table service
    command: "azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"

  # Local S3 (MinIO)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  # Run specific tests
  test-runner:
    image: catthehacker/ubuntu:act-latest
    depends_on:
      - etcd
      - azurite
      - minio
    volumes:
      - .:/workspace
    working_dir: /workspace
    environment:
      - ETCD_ENDPOINTS=http://etcd:2379
      - AZURE_STORAGE_ACCOUNT=devstoreaccount1
      - AZURE_STORAGE_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - RUN_LONG_TESTS=yes
    command: |
      bash -c "
        # Wait for services
        apt-get update && apt-get install -y netcat
        while ! nc -z etcd 2379; do sleep 1; done
        while ! nc -z azurite 10000; do sleep 1; done
        while ! nc -z minio 9000; do sleep 1; done
        
        # Install Go
        apt-get install -y golang-go
        
        # Run tests
        go test -v -race ./...
      "

volumes:
  act-cache:
  minio-data:
  etcd-data:

