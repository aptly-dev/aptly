#!/bin/sh
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule


case "$1" in
  configure)
	# create an aptly group and user
        if ! getent passwd aptly-api > /dev/null; then
	    useradd --system --user-group --create-home --home-dir /var/lib/aptly-api aptly-api
        fi

        # set config file permissions not world readable as it may contain secrets
        chown root:aptly-api /etc/aptly.conf
        chmod 640 /etc/aptly.conf

        if [ -f /etc/aptly-api.conf.migrate ]; then
            rootDir=`grep rootDir /etc/aptly-api.conf.migrate | sed 's_/var/lib/aptly-api_~_' | sed -n 's/.\+: "\([^"]\+\)".*/\1/p'`
            if [ -n "$rootDir" ]; then
                sed -i 's/\(.*"rootDir": "\)[^"]*\(".*\)/\1'$rootDir'\2/' /etc/aptly.conf
            fi
            echo "backing up /etc/aptly-api.conf to /etc/aptly-api.conf.old..."
            mv /etc/aptly-api.conf.migrate /etc/aptly-api.conf.old
        fi
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop

exit 0
