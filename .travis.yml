dist: xenial
sudo: required

language: go

go_import_path: github.com/aptly-dev/aptly

addons:
  apt:
    packages:
    - python-virtualenv
    - graphviz
    - gnupg2
    - gpgv2

env:
  global:
    - secure: "EcCzJsqQ3HnIkprBPS1YHErsETcb7KQFBYEzVDE7RYDApWeapLq+r/twMtWMd/fkGeLzr3kWSg7nhSadeHMLYeMl9j+U7ncC5CWG5NMBOj/jowlb9cMCCDlmzMoZLAgR6jm1cJyrWCLsWVlv+D0ZiB0fx4xaBZP/gIr9g6nEwC8="
    - secure: "OxiVNmre2JzUszwPNNilKDgIqtfX2gnRSsVz6nuySB1uO2yQsOQmKWJ9cVYgH2IB5H8eWXKOhexcSE28kz6TPLRuEcU9fnqKY3uEkdwm7rJfz9lf+7C4bJEUdA1OIzJppjnWUiXxD7CEPL1DlnMZM24eDQYqa/4WKACAgkK53gE="
    - NO_FTP_ACCESS: "yes"
    - BOTO_CONFIG: /dev/null
    - GO111MODULE: "on"
    - GOPROXY: https://proxy.golang.org

matrix:
  allow_failures:
    - go: master
      env: RUN_LONG_TESTS=no
  fast_finish: true
  include:
    - go: 1.11.x
      env: RUN_LONG_TESTS=no
    - go: 1.12.x
      env: RUN_LONG_TESTS=no
    - go: 1.13.x
      env: RUN_LONG_TESTS=no
    - go: 1.14.x
      env: RUN_LONG_TESTS=yes
    - go: 1.15.x
      env:
        - RUN_LONG_TESTS=yes
        - DEPLOY_BINARIES=yes
        - APTLY_USER=aptly
        - secure: "ejVss+Ansvk9f237iXVd87KA8N/SkfJkEdr/KCw9WRkVw3M9WyYtFnqpakIUPFT8RsSc7MW+RU4OM90DsbE9dbDIL0oW+t6QH/IfGjNG2HjDiGEWN/tMLeAQTtzPaVqlItJBo0ILMF2K6NrgkYBYU+tZ8gk5w7CuARvAk82d00o="
    - go: master
      env: RUN_LONG_TESTS=no

before_install:
  - virtualenv system/env
  - . system/env/bin/activate
  - pip install six packaging appdirs
  - pip install -U pip setuptools
  - pip install -r system/requirements.txt
  - make version

install:
  - make prepare

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  webhooks:
    urls:
      - "https://webhooks.gitter.im/e/c691da114a41eed6ec45"
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false

before_deploy:
  - make release

deploy:
  - provider: releases
    api_key:
      secure: XHxYAFBzzgOZyK6JXQpEp0kGrZPmd02esEJjwJXZpWT68kRzCCrBXg+x3vIcgRtl82oQbflv/ThNlGT80iqSmd+Itsa5lUJoJnRxbP8qSykfCXmkrgsHIxbGxWIL+JHAWmwQdkV91kDS04nmjl9MDptLId0tuleWwcMH6h1hgMg=
    file_glob: true
    file: build/*
    skip_cleanup: true
    on:
      tags: true
      condition: "$DEPLOY_BINARIES = yes"
  - provider: s3
    access_key_id:
      secure: "I2etn22HHsQjJNhr6zdM/P4VLCYwEA/6HEf2eGvwey93oLeog+KnDCUI7lwGAHYuwzyDGQbZZ6YdoNc3b0kxaRWT0W+ke78TAdJhTZ+xbqGfEWv1er0zklJLOsimYF097rDJw8g3Oh/Gjwt5TTp0GJ5l3IhJ6zepNsKCMuwQpJM="
    secret_access_key:
      secure: "inRWX7FuyhkhKzGknSd2/mjZaNFZm/zHMejM99OF6PiGLNtyt/esdA0ToYL8B8Icl0/SISlLlEr/DDa4OGENKueFVeHrKH7OK0jVbWp9Yvw4hCXSlw9VmlkHDMQrC4gybS2Hf7el8N4AFVqyeUE7LqiP3WruHRdbE9XgOnTkLkg="
    bucket: aptly-nightly
    skip_cleanup: true
    acl: public-read
    local_dir: build
    on:
      branch: master
      condition: "$DEPLOY_BINARIES = yes"
  - provider: script
    script: bash upload-artifacts.sh nightly
    skip_cleanup: true
    on:
      branch: master
      condition: "$DEPLOY_BINARIES = yes"
  - provider: script
    script: bash upload-artifacts.sh release
    skip_cleanup: true
    on:
      tags: true
      condition: "$DEPLOY_BINARIES = yes"
